<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Guide on Phala Network Wiki</title>
    <link>https://wiki.phala.network/en-us/docs/developer/</link>
    <description>Recent content in Developer Guide on Phala Network Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://wiki.phala.network/en-us/docs/developer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 Phala Blockchain in Detail</title>
      <link>https://wiki.phala.network/en-us/docs/developer/blockchain-in-detail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/blockchain-in-detail/</guid>
      <description>Overview In this chapter, we try to give a brief introduction to the structure of Phala blockchain. In general, Phala Network consists of the Phala blockchain and the off-chain TEE runtime. Also, we introduce a bridge relayer to connect them. So a full stack of a Phala node contains the following three components.
 phala-node: The Substrate-based blockchain node pRuntime: The TEE runtime. Contracts run in pRuntime pherry: The Substrate-TEE bridge relayer.</description>
    </item>
    
    <item>
      <title>1.2 Run a Local Development Network</title>
      <link>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</guid>
      <description>Basic understanding of Linux shell and compilation is necessary to follow this tutorial.
 Overview In this tutorial, we&amp;rsquo;re going to set up a development environment. We are going to deploy a full stack of the core blockchain and connect the Web UI to the blockchain. By the end of the tutorial, you will be able to:
 Send confidential Commands and Queries Get a ready-to-hack version of Phala Network for building your confidential DApps  A full Phala Network stack has three components, with an optional Javascript SDK.</description>
    </item>
    
    <item>
      <title>1.3 Confidential Contract Examples</title>
      <link>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</guid>
      <description>Basic understanding of Rust language programming and smart contract development knowledge is necessary to follow this tutorial.
 Overview In this tutorial, we are going to continue on the development environment we have set up in the previous chapter, and explore how a confidential smart contract is made. By the end of this tutorial, you will:
 Learn how to develop a confidential contract Interact with the contract from the Web UI Build your own confidential contract  For a high-level overview of Phala Network, please check the previous chapters.</description>
    </item>
    
  </channel>
</rss>
