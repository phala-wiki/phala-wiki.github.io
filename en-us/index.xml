<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phala Network Wiki</title>
    <link>https://wiki.phala.network/en-us/</link>
    <description>Recent content on Phala Network Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jul 2020 01:16:05 +0800</lastBuildDate><atom:link href="https://wiki.phala.network/en-us/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploy Local Testnet</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/deploy-local-testnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/deploy-local-testnet/</guid>
      <description>There are two options to run the pdiem demo:
 Use our Docker Compose file Build from the source and run it directly  This guide will only cover the Docker Compose approach because it handles everything automatically for you. It installs the dependencies, builds the code, starts the network with the components connected correctly, and start them.
In the development environment we build the code natively. The pro users who want to hack on our code can look into the Dockerfiles and docker-compose file to learn how the system is configured.</description>
    </item>
    
    <item>
      <title>Play with pDiem</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/play-with-pdiem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/play-with-pdiem/</guid>
      <description>The pdiem full stack includes:
 A local Diem testnet: diem, diem-cli A Phala Network local testnet with the pdiem contract: phala-node, phala-pruntime, phala-phost A relayer to connect the both networks: pdiem-relayer  With the pdiem full stack running, we are going to send some Diem transactions to the pdiem deposit account, and check if the pdiem contract has received it.
Create Diem accounts First, start the diem-cli from the same directory:</description>
    </item>
    
    <item>
      <title>Reservation-based Model</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/reservation-based-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/reservation-based-model/</guid>
      <description>A bridge connects the local blockchain to a remote blockchain. pDiem follows the &amp;quot;reservation asset&amp;quot; cross-chain asset transferring pattern (see the equivalent pattern defined in XCM Format). In our case, pDiem (and its parachain) is the local blockchain, and Diem is the remote blockchain.
The pDiem bridge controls a set of sovereign accounts (see XCM Format - Definitions) on the Diem side, which hold all the Diem assets transferred to pDiem side.</description>
    </item>
    
    <item>
      <title>Light Validation Client</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/light-validation-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/light-validation-client/</guid>
      <description>The Basics A minimal cross-chain bridge can transfer assets between the two blockchains. In the reservation-based model, it requires that the local blockchain can confirm some deposit to its sovereign accounts, and the remote blockchain can confirm the withdraw commands from the local blockchain. The validation of the blockchain is done by full nodes, but they are too heavy to fit into a smart contract or blockchain, in terms of the computation and the storage.</description>
    </item>
    
    <item>
      <title>Contract Implementation</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/contract-implementation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/contract-implementation/</guid>
      <description>The pdiem contract implements a Diem light client and wallet. On the one hand, the pdiem relayers talks to the contract to sync the transactiosn between Diem side and pdiem side. On the other hand, it provides the interface for users to manage their cross-chain assets.
The pdiem contract acts as a regular Diem wallet. It holds the private keys inside its Phala Network confidential contract. So the contract can control some wallets to receive or send funds on the Diem blockchain.</description>
    </item>
    
    <item>
      <title>The Relayer</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/the-relayer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/the-relayer/</guid>
      <description>The pdiem relayer is the component to sync data between pdiem and the Diem blockchain. It runs off-chain, connects to the both blockchains, and watch the related transactions.
Codebase: Phala-Network/pdiem-relayer.
Who runs the relayer Anyone can run a relayer, and in theory only one honest relayer is required to operate the pdiem bridge, because all the messages submitted by the relayer are validated by the Diem blockchain or the pdiem contract.</description>
    </item>
    
    <item>
      <title>Future Works</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/future-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/future-works/</guid>
      <description>pDiem is a fast growing project. We plan to add the features below in the near future:
 Contract  Token transfer: integrate with Assets confidential contract and XCM Move to Ink! confidential smart contract (WASM) Confirm the successful withdraw Multisig collateral   Relayer  Relay messages back to Diem Relay withdraw event to the pdiem contract   Economic  Incentives design for the relayer   User interface: integrate with Phala-Network/apps-ng  </description>
    </item>
    
    <item>
      <title>Run a Gatekeeper</title>
      <link>https://wiki.phala.network/en-us/docs/gatekeeper/run-a-gatekeeper/</link>
      <pubDate>Fri, 10 Jul 2020 01:16:05 +0800</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/gatekeeper/run-a-gatekeeper/</guid>
      <description>Setup Environment   Hardware
 CPU: 6th generation or newer Intel Core/Pentium/Celeron/Atom series. Memory: 2GB - 8GB. 2GB is indeed the minimum memory you should operate your Gatekeeper with. For better performance, you can bump it up to 4GB or 8GB, but memory more than that is unnecessary. In order to compile the binary yourself, you will need around 8GB memory. Mainboard: SGX-supported mainboard, and newer mainboards can support more SGX features.</description>
    </item>
    
    <item>
      <title>Run a full node</title>
      <link>https://wiki.phala.network/en-us/docs/poc2/run-a-full-node/</link>
      <pubDate>Mon, 06 Jul 2020 22:30:41 +0800</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc2/run-a-full-node/</guid>
      <description>If you&#39;re building dapps or products on a Phala Network, you probably want the ability to run a node-as-a-back-end. After all, it&#39;s always better to rely on your own infrastructure than on a third-party-hosted one in this brave new decentralized world.
This guide will show you how to connect to Phala Network PoC-2. First, let&#39;s clarify the term full node.
Types of Nodes A blockchain&#39;s growth comes from a genesis block, extrinsics, and events.</description>
    </item>
    
    <item>
      <title>1.1 Register a Phala account</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-1-register-a-phala-acocunt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-1-register-a-phala-acocunt/</guid>
      <description>Go to the account management page of the Phala Testnet: https://poc3.phala.network/polkadotjs/#/accounts
  Click Add Account   Carefully write down the mnemonic seed and check I have saved my mnemonic seed safely, and then click Next. Note: Keep the mnemonic seed safe and secure!   Enter a name and password (and confirm your password.) If you plan to run a Gatekeeper as well as a Miner, we recommend including the word &amp;quot;Controller&amp;quot; for a gatekeeper controller account and the word &amp;quot;Stash&amp;quot; for a miner stash account.</description>
    </item>
    
    <item>
      <title>1.1 Run a Local Development Network</title>
      <link>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</guid>
      <description>Basic understanding of Linux shell and compiling is necessary to follow this tutorial.
 Overview In this tutorial, we are going to set up a &amp;quot;Hello World&amp;quot; development environment. We are going to deploy a full stack of the core blockchain and connect the Web UI to the blockchain. By the end of the tutorial, you will be able to:
 Send confidential transactions Get a ready-to-hack version of Phala Network for building your own confidential Dapps  A full Phala Network stack has three components plus a Web UI.</description>
    </item>
    
    <item>
      <title>1.2 Bind Stash and Controller accounts</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-2-bind-stash-and-controller-accounts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-2-bind-stash-and-controller-accounts/</guid>
      <description>Create two Phala accounts
 Reference https://hackmd.io/1U7uIEb-RD6bakEKmBlJzg to create a Phala account To help identify the relationship between accounts later, we recommend that you add &amp;quot;Stash&amp;quot; and &amp;quot;Controller&amp;quot; to the account names.    Get Test Currency
Join our testnet faucet Telegram group to get some free test coins.
  Set the binding relationship between stash and controller
Developer Tab → Extrinsics (transaction) → select your Stash account → select phalaModule → choose setStash(controller) -&amp;gt; select your Controller account.</description>
    </item>
    
    <item>
      <title>1.2 Hello World: your first confidential contract</title>
      <link>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</guid>
      <description>Basic understanding of Rust language programming and smart contract development knowledge is necessary to follow this tutorial.
 Overview In this tutorial, we are going to continue on the development environment we have set up in the previous chapter, and explore how a confidential smart contract is made. By the end of this tutorial, you will:
 Learn how to develop a confidential contract Interact with the contract from the Web UI Build your own confidential contract  For a high-level overview of Phala Network, please check the previous chapters.</description>
    </item>
    
    <item>
      <title>1.3 Check your hardware, BIOS and system</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-3-check-your-hardware-bios-and-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-3-check-your-hardware-bios-and-system/</guid>
      <description>General Phala Hardware Requirements A system can potentially mine Phala if it meets these general requirements:
It will also need a motherboard and BIOS which support using Intel SGX to run a Trusted Execution Environment (TEE).
Check Your CPU   Look up your computer&#39;s Processor. On Windows, you can find this in Control Panel/Settings, or right-click on the Start icon and select System. On Ubuntu, click in the upper-right corner, pick Settings, and then pick About.</description>
    </item>
    
    <item>
      <title>1.3 Troubleshooting</title>
      <link>https://wiki.phala.network/en-us/docs/developer/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/troubleshooting/</guid>
      <description>phala-blockchain Problem: &amp;quot;the wasm32-unknown-unknown target may not be installed&amp;quot; You need to add the wasm-unknown-unknown target to your rust toolchain. Do it by this (under the code repo):
1rustup target add wasm32-unknown-unknown Problem: &amp;quot;(signal: 9, SIGKILL: kill)&amp;quot; when building substrate The compiler may run out-of-memory. Usually each thread takes up to 2GB RAM. If you don&#39;t have enough memory, you can limit the concurrency specifying a smaller N than your available cores:</description>
    </item>
    
    <item>
      <title>1.4 Software Configuration</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-4-software-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-4-software-configuration/</guid>
      <description>System Requirement  This tutorial is based on Ubuntu 18.04. Ubuntu with versions other than 18.04 are not covered in this tutorial, though they and other Linux distributions may also work as well. How to install Ubuntu 18.04 Make sure wget is installed all your packages are up-to-date:  1sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y 2sudo apt install wget Install Phala-solo-Scripts Download the Phala-solo-Scripts form Github</description>
    </item>
    
    <item>
      <title>1.5 On-Chain Staking</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-5-on-chain-stake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-5-on-chain-stake/</guid>
      <description>Over Staking for Computing Task Process of Staking  Stake Transfer to your stash account, nominator your or other miner, the token will be locked in this round and become effective in next round. Withdraw Stake The token will be pre-unlocked, and be unlocked in next round.  How to Operating  Ready to work  Open the following two pages and select the corresponding transaction or query
 Select the stath account，select “miningStaking” in &amp;quot;submit the following extrinsic&amp;quot;.</description>
    </item>
    
    <item>
      <title>1.6 Introduction of 1605 Race Privacy Computing Task</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/1-6-introduction-of-1605-race-privacy-computing-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/1-6-introduction-of-1605-race-privacy-computing-task/</guid>
      <description>Introduction of 1605 Race Privacy Computing Task Who are familiar with Phala Tokenomics know that Phala&#39;s mining rewards are divided into online rewards and computing task rewards. In this 1605 Race V2, on the basis of online rewards, the emphasis is on the introduction of computing task rewards. This article is an introduction to the computing tasks of the Vendetta testnet.
Background summary  The computing tasks in this testnet are generated virtually by the system, and 5 computing tasks are fixed for each Round (600 blocks).</description>
    </item>
    
    <item>
      <title>2.1 Start the Phala miner</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/2-1-start-the-phala-miner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/2-1-start-the-phala-miner/</guid>
      <description>Start the Phala miner 1sudo phala start  The scripts will run for a long time.The pruntime and phost will start until the full node got the highest block.
 It costs a tiny amount of tPHA as well. Before deploying pHost, please make sure there are a certain amount of tPHA in your Stash account and controller account. Click here to learn how to obtain tPHA.
Check the phala miner status You can check your miner status as this command：</description>
    </item>
    
    <item>
      <title>2.2 Set Commission</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/2-2-set-commission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/2-2-set-commission/</guid>
      <description>Go to Developer -&amp;gt; Extrinsics. Choose your Controller account -&amp;gt; phalaModule -&amp;gt; setPayoutPrefs(payout_comission, payout_target) Fill in commission (from 0 to 100) and choose the account where you want to receive the mining rewards at target.   The commission rate influences your final profits. For any mining reward you get, you always take the commission from it, and then distribute the rest propotionally to the mining stakers. For example, a comission of 100 means all the profits are tranferred to your specified account and a comission of 0 will share all the profits to your mining stakers.</description>
    </item>
    
    <item>
      <title>2.3 Verify the Miner State</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/2-3-verify-the-miner-state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/2-3-verify-the-miner-state/</guid>
      <description>Go to Developer -&amp;gt; Chain state :
 Check miner score: phalaModule - &amp;gt;workerState -&amp;gt; choose your stash account  score.overallScore: the total points that a miner scores features: number of enabled cores, and the level of your cores（1-4）.   Check stash state: stashState Confirm the binding between stash and controller addresses: phalaModule.stash(controller) An example of all the details of mining state is shown below:  Mining State References  Empty: A rare tag to see if you have registered your miner successfully Free: Your miner is successfully registered but haven&#39;t start mining Gatekeeper: Your Gatekeeper role is enabled MiningPending: Your miner will start mining in the next round Mining: BlockNumber: Your miner is mining; the number aside is the blockheight where you start MiningStopping: Your miner will stop mining in the next round (state changed into Free).</description>
    </item>
    
    <item>
      <title>3.1 Set Miner Stakes</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/3-1-set-miner-stakes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/3-1-set-miner-stakes/</guid>
      <description>As designed in Phala Token Economics, each miner is required to stake at least 1620 PHA per core before mining starts. On testnet Vendetta, to better perform a stress test on Phala network and allow more miners to participate, Phala network will automatically stake for miners after they register.
However, to score a higher rank in the Miner Race, you can earn more points by using better hardwares, staking more tPHA, or simply running for a longer period, e.</description>
    </item>
    
    <item>
      <title>3.2 Start Mining</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/3-2-start-mining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/3-2-start-mining/</guid>
      <description>Go to Develoepr -&amp;gt; Extrinsics Choose your controller account，click phalaModule -&amp;gt; startMiningIntention() ，and Submit Transaction.  Then you will wait for the next mining period (every 1 hour) to get started.
Mining States Verification  Go to Developer → Chain State Choose phalaModule → workerState, and choose your stash account If there&#39;s a Mining with block height after state, congratulations, your miner is working. If there&#39;s a Miningpending, it means your miner will start mining from the next round (600 blocks later).</description>
    </item>
    
    <item>
      <title>3.3 Stop Mining</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/3-3-stop-mining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/3-3-stop-mining/</guid>
      <description>Go to Developer → Extrinsics Choose your controller account，clickphalaModule → stopMiningIntention() → Submit Transaction  Then you will wait for the next mining period (every 1 hour) to get stopped.
Miner State Verification onchain  Go toDeveloper → Chain State phalaModule → workerState → Stash account phalaModule → miningState → Stash account  Miner State Verification 1sudo phala status Stop the Phala miner You can stop your phala miner as this command:</description>
    </item>
    
    <item>
      <title>3.4 Check Miner Profits</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/3-4-check-mining-profits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/3-4-check-mining-profits/</guid>
      <description> Go to Developer → Chain State Click phalaModule → fire(Accountld): BalanceOf  </description>
    </item>
    
    <item>
      <title>3.5 Upgrade Miner</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/3-5-upgrade-miner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/3-5-upgrade-miner/</guid>
      <description>Stop mining  If your miner is not in mining status, feel free to skip this step.
   Refer to this link to stop mining.
  Wait until the end of the current mining period (1 hour per mining period). If you stop the miner too early, you may get slashed.
  Run the following commands to kill the original containers:
1sudo phala stop   Update the Phala miner and clean the local files Run the commands below to remove cached data.</description>
    </item>
    
    <item>
      <title>4 Frequently Asked Questions</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/4-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/4-faq/</guid>
      <description>Miner Community Please don&#39;t hesitate to ask us if you have any questions. You can find us at:

I. Glossary  SGX. Software Guard Extensions. TEE. Trusted Execution Environment. Full-node. A full node is pruned, meaning it discards all information older than 256 blocks, but keeps the extrinsics for all past blocks, and the genesis block. A node that is pruned this way requires much less space than an archive node.</description>
    </item>
    
    <item>
      <title>4.1 Error References</title>
      <link>https://wiki.phala.network/en-us/docs/poc3/4.1-error-references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/poc3/4.1-error-references/</guid>
      <description>Error How to Fix     No genesis block Please upgrade your miner node following these steps.   Failed to decode signature Please kindly check whether your node has finished syncing.   FailedToCallRegisterWorker You may refer to:
1. Go to https://telemetry.polkadot.io/#list/Phala%20PoC-3 and check whether your node has finished sycning;
2. type in sudo docker attach --sig-proxy=false --detach-keys=ctrl-c phala-pruntime to learn whether your pRuntime has been launched</description>
    </item>
    
  </channel>
</rss>
