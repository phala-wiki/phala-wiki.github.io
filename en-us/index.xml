<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phala Network Wiki</title>
    <link>https://wiki.phala.network/en-us/</link>
    <description>Recent content on Phala Network Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://wiki.phala.network/en-us/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Collator</title>
      <link>https://wiki.phala.network/en-us/docs/maintain/collator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/maintain/collator/</guid>
      <description>Collators on Phala (Khala) are supposed to be Gatekeepers, who also run the pRuntime as the Gatekeeper role, helping manage the keys in the network. However, Gatekeeper is not open for election now.  Concepts Phala Network is currently running its collators on Aura consensus. Aura is a simple block authoring engine that rotates the block producers among the registered collator candidates one by one.
 Host Session Api Manager Collator &amp;lt;===== [Session] &amp;lt;--------- [CollatorSelection] node pallet pallet On the blockchain, the block authoring is handled collaboratively by Session and CollatorSelection pallets.</description>
    </item>
    
    <item>
      <title>Deploy Local Testnet</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/deploy-local-testnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/deploy-local-testnet/</guid>
      <description>There are two options to run the pdiem demo:
 Use our Docker Compose file Build from the source and run it directly  This guide will only cover the Docker Compose approach because it handles everything automatically for you. It installs the dependencies, builds the code, starts the network with the components connected correctly, and start them.
In the development environment we build the code natively. The pro users who want to hack on our code can look into the Dockerfiles and docker-compose file to learn how the system is configured.</description>
    </item>
    
    <item>
      <title>Deployment with Containers: An Example with Docker Compose</title>
      <link>https://wiki.phala.network/en-us/docs/prb/docker-compose-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/prb/docker-compose-example/</guid>
      <description>Every release of prb is publish on Docker Hub once it gets on the Github release page, you can get the latest release by running:
1docker pull phalanetwork/prb The prb is designed to be simple, basic and easily integrated with RPC without modifying its code. With containers, managing prb services and integrating them is much easier. Here is an example of how to deploy prb with Docker Compose.
 Note: This expample explains the relationship between services only, you should design your setup regrading your own requirements.</description>
    </item>
    
    <item>
      <title>Play with pDiem</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/play-with-pdiem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/play-with-pdiem/</guid>
      <description>The pdiem full stack includes:
 A local Diem testnet: diem, diem-cli A Phala Network local testnet with the pdiem contract: phala-node, phala-pruntime, phala-phost A relayer to connect the both networks: pdiem-relayer  With the pdiem full stack running, we are going to send some Diem transactions to the pdiem deposit account, and check if the pdiem contract has received it.
Create Diem accounts Start the diem-cli from the same directory by:</description>
    </item>
    
    <item>
      <title>Reservation-based Model</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/reservation-based-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/reservation-based-model/</guid>
      <description>A bridge connects the local blockchain to a remote blockchain. pDiem follows the &amp;ldquo;reservation asset&amp;rdquo; cross-chain asset transferring pattern (see the equivalent pattern defined in XCM Format). In our case, pDiem (and its parachain) is the local blockchain, and Diem is the remote blockchain.
The pDiem bridge controls a set of sovereign accounts (see XCM Format - Definitions) on the Diem side, which hold all the Diem assets transferred to pDiem side.</description>
    </item>
    
    <item>
      <title>Running Directly in Linux</title>
      <link>https://wiki.phala.network/en-us/docs/prb/running-directly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/prb/running-directly/</guid>
      <description>Running prb directly in a Linux shell is not recommended since using Docker is more convenient in both development and production.
Requirements  git Redis 5 or newer Node.js 14 (Latest LTS) pnpm  Set up dependencies and generate Protobuf interfaces 1git submodule init 2git submodule update 3pnpm install 4pnpm proto:build # use `pnpm proto:darwin:build` in macOS 5pnpm proto:build_prpc # use `pnpm proto:darwin:build_prpc` in macOS Start Services To start any of the services, run pnpm start_module, all parameters are read from the environment variables of current shell.</description>
    </item>
    
    <item>
      <title>Light Validation Client</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/light-validation-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/light-validation-client/</guid>
      <description>The Basics A minimal cross-chain bridge can transfer assets between the two blockchains. In the reservation-based model, it requires that the local blockchain can confirm some deposit to its sovereign accounts, and the remote blockchain can confirm the withdraw commands from the local blockchain. The validation of the blockchain is done by full nodes, but they are too heavy to fit into a smart contract or blockchain, in terms of the computation and the storage.</description>
    </item>
    
    <item>
      <title>Polkadot{.js} Extension Guide</title>
      <link>https://wiki.phala.network/en-us/docs/khala-user/polkadot-js-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-user/polkadot-js-extension/</guid>
      <description>In this tutorial, we present how to use Polkadot{.js} Extension to create/import Khala account. Khala Network, as the parachain of Kusama, shares the accounts of Kusama Relay Chain.
Install Polkadot{.js} Extension   Get extension from https://polkadot.js.org/extension/
  Choose Chrome or Firefox Extension according to your explorer
  Create New Account  Choose your installed Polkadot{.js} Extension; Click &amp;ldquo;+&amp;rdquo;, and choose &amp;ldquo;Create new account&amp;rdquo;;  Keep mnemonic seed safe; Choose Network &amp;ldquo;Allow use on any chain&amp;rdquo;, fill in the descriptive name and password, and click &amp;ldquo;Add the account with the generated seed&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Contract Implementation</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/contract-implementation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/contract-implementation/</guid>
      <description>The pdiem contract implements a Diem light client and wallet. On the one hand, the pdiem relayers talks to the contract to sync the transactiosn between Diem side and pdiem side. On the other hand, it provides the interface for users to manage their cross-chain assets.
The pdiem contract acts as a regular Diem wallet. It holds the private keys inside its Phala Network confidential contract. So the contract can control some wallets to receive or send funds on the Diem blockchain.</description>
    </item>
    
    <item>
      <title>The Relayer</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/the-relayer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/the-relayer/</guid>
      <description>The pdiem relayer is the component to sync data between pdiem and the Diem blockchain. It runs off-chain, connects to the both blockchains, and watch the related transactions.
Codebase: Phala-Network/pdiem-relayer.
Who runs the relayer Anyone can run a relayer, and in theory only one honest relayer is required to operate the pdiem bridge, because all the messages submitted by the relayer are validated by the Diem blockchain or the pdiem contract.</description>
    </item>
    
    <item>
      <title>Future Works</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/future-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/future-works/</guid>
      <description>pDiem is a fast growing project. We plan to add the features below in the near future:
 Contract  Token transfer: integrate with Assets confidential contract and XCM Move to Ink! confidential smart contract (WASM) Confirm the successful withdraw Multisig collateral   Relayer  Relay messages back to Diem Relay withdraw event to the pdiem contract   Economic  Incentives design for the relayer   User interface: integrate with Phala-Network/apps-ng  </description>
    </item>
    
    <item>
      <title>Advanced: Hardware Mode</title>
      <link>https://wiki.phala.network/en-us/docs/pdiem/hardware-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/pdiem/hardware-mode/</guid>
      <description>By default, the demo is built with SGX SDK software mode. It&amp;rsquo;s designed for development environment. However, to protect the data and logic inside the Enclave, it must run in hardware mode.
Intel SGX SDK comes with three modes:
 Software: it runs in the simulation environment, and offers no protection to the code or data Hardware Dev: it runs in the real hardware environment, but allows debuggers to attach to it and thus no protection as well Hardware Prod: it runs in the real hardware environment and disallows debugger to attach, but has to be signed with production certificates  To run SGX programs in the hardware mode, you need to install the SGX driver first.</description>
    </item>
    
    <item>
      <title>1 Participate in Democracy</title>
      <link>https://wiki.phala.network/en-us/docs/governance/1-participate-in-democracy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/governance/1-participate-in-democracy/</guid>
      <description>Participate in Democracy The public referenda chamber is one of the three bodies of on-chain governance as it&amp;rsquo;s instantiated in Phala and Khala. The other two bodies are the council and the technical committee.
Public referenda can be proposed and voted on by any token holder in the system as long as they provide a bond. After a proposal is made, others can agree with it by seconding it and putting up tokens equal to the original bond.</description>
    </item>
    
    <item>
      <title>1 TEE Mining Staking</title>
      <link>https://wiki.phala.network/en-us/docs/tokenomic/1-mining-staking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/tokenomic/1-mining-staking/</guid>
      <description>MathJax = { tex: { inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;, &#39;\\]&#39;]], processEscapes: true, processEnvironments: true }, options: { skipHtmlTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;] } }; window.addEventListener(&#39;load&#39;, (event) = { document.querySelectorAll(&#34;mjx-container&#34;).forEach(function(x){ x.parentElement.classList += &#39;has-jax&#39;}) });   Introduction To secure the cloud of Workers and the jobs they are assigned, the network will set Confidence Level for each worker’s CPU and will require Staking to enable mining.</description>
    </item>
    
    <item>
      <title>1.1 Check Your Hardware, BIOS and System</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/1-1-hardware-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/1-1-hardware-requirements/</guid>
      <description>General Khala Hardware Requirements A system can potentially mine Phala if it meets these general requirements:
It will also need a motherboard and BIOS which support using Intel SGX to run a Trusted Execution Environment (TEE).
Check Your CPU   Look up your computer&amp;rsquo;s Processor. On Windows, you can find this in Control Panel/Settings, or right-click on the Start icon and select System. On Ubuntu, click in the upper-right corner, pick Settings, and then pick About.</description>
    </item>
    
    <item>
      <title>1.1 Run a Local Development Network</title>
      <link>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/run-a-local-development-network/</guid>
      <description>Basic understanding of Linux shell and compiling is necessary to follow this tutorial.
 Overview In this tutorial, we&amp;rsquo;re going to set up a &amp;ldquo;Hello World&amp;rdquo; development environment. We are going to deploy a full stack of the core blockchain and connect the Web UI to the blockchain. By the end of the tutorial, you will be able to:
 Send confidential transactions Get a ready-to-hack version of Phala Network for building your own confidential Dapps  A full Phala Network stack has three components plus a Web UI.</description>
    </item>
    
    <item>
      <title>1.2 Hello World: your first confidential contract</title>
      <link>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/your-first-confidential-contract/</guid>
      <description>Basic understanding of Rust language programming and smart contract development knowledge is necessary to follow this tutorial.
 Overview In this tutorial, we are going to continue on the development environment we have set up in the previous chapter, and explore how a confidential smart contract is made. By the end of this tutorial, you will:
 Learn how to develop a confidential contract Interact with the contract from the Web UI Build your own confidential contract  For a high-level overview of Phala Network, please check the previous chapters.</description>
    </item>
    
    <item>
      <title>1.2 Install Phala Tools</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/1-2-download-setup-scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/1-2-download-setup-scripts/</guid>
      <description>Prerequisites Before you go further, please ensure that your have correct setup your hardware, BIOS and operating system according to the previous section.
Download Phala Scripts The Phala tools are availbale at https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/main.zip, it can be downloaded with wget by executing the following commands in the terminal:
1sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y 2sudo apt install wget unzip 3cd ~ 4wget https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/main.zip 5unzip main.</description>
    </item>
    
    <item>
      <title>1.3 Check the SGX Capability and Confidence Level</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/1-3-confidential-level-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/1-3-confidential-level-evaluation/</guid>
      <description>Double Check the SGX Capability After the installation of your driver, please use the following utility to double check if everything goes well.
  You can run the SGX test by the Phala scripts
1sudo phala sgx-test   Please pay attention to the following checks:
 SGX system software → Able to launch enclaves → Production Mode Flexible launch control → Able to launch production mode enclave isvEnclaveQuoteStatus and advisoryIDs (explained in the next section)  Among them, the first one is a must to run Phala Network pRuntime.</description>
    </item>
    
    <item>
      <title>1.3 Troubleshooting</title>
      <link>https://wiki.phala.network/en-us/docs/developer/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/developer/troubleshooting/</guid>
      <description>phala-blockchain Problem: &amp;ldquo;the wasm32-unknown-unknown target may not be installed&amp;rdquo; You need to add the wasm-unknown-unknown target to your rust toolchain. Do it by this (under the code repo):
1rustup target add wasm32-unknown-unknown Problem: &amp;ldquo;(signal: 9, SIGKILL: kill)&amp;rdquo; when building substrate The compiler may run out-of-memory. Usually each thread takes up to 2GB RAM. If you don&amp;rsquo;t have enough memory, you can limit the concurrency specifying a smaller N than your available cores:</description>
    </item>
    
    <item>
      <title>1.4 Benchmarking</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/1-4-benchmarking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/1-4-benchmarking/</guid>
      <description>Benchmark Your Worker First, install the needed images with Phala tools:
1sudo phala install If you have installed the images before, you can update them with:
1sudo phala update script Get the performance score with:
1sudo phala score-test [number_of_cores] 2# e.g., sudo phala score-test 4  Tip: We recommend to use all the cores of your CPU.
 The performance test has to be stopped manually with:
1sudo phala stop pruntime-bench After that, you will be asked whether to upload the performance test results.</description>
    </item>
    
    <item>
      <title>2 Join the Council</title>
      <link>https://wiki.phala.network/en-us/docs/governance/2-join-the-council/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/governance/2-join-the-council/</guid>
      <description>The council is an elected body of on-chain accounts that are intended to represent the passive stakeholders of Phala and/or Khala. The council has two major tasks in governance: proposing referenda and vetoing dangerous or malicious referenda. For more information on the council, see the governance page. This guide will walk you through entering your candidacy to the council.
Submit Candidacy Submitting your candidacy for the council requires a small bond of PHA / K-PHA.</description>
    </item>
    
    <item>
      <title>2 Solo mining configuration</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/2-solo-mining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/2-solo-mining/</guid>
      <description>If you have successfully installed the SGX driver and finished the benchmarking, you can skip the following tutorials.  Install You can use the following commands to install Phala tools. It will automatically set the number of CPU cores to use, node name, gas fee account mnemonic and pool owner account.
1sudo phala install By default, all the configurations are set automatically. If you want to manually config the tools, use the following commands and set the parameters.</description>
    </item>
    
    <item>
      <title>2.1 Deploy Worker Node</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/2-1-deploy-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/2-1-deploy-worker-node/</guid>
      <description> You cannot start mining before Khala mining starts. But you can follow this command to pre-sync your Khala node:
1sudo phala presync   Start Mining After all the installation and configuration, let&amp;rsquo;s start mining!
1sudo phala start </description>
    </item>
    
    <item>
      <title>2.2 Verify Worker Status</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/2-2-verify-worker-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/2-2-verify-worker-status/</guid>
      <description>Verify Worker Status Read the worker status with:
1sudo phala status An expected worker status is shown as follow, which contains the node name, number of cores, gas account and balance, StakePool account and Worker public key.
 Warning will be sent if your gas account balance is under 2 PHA so you can recharge in time.  </description>
    </item>
    
    <item>
      <title>2.3 Upgrade Worker Node</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/2-3-upgrade-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/2-3-upgrade-worker-node/</guid>
      <description>To upgrade your worker requires it to stop first.
1sudo phala stop The worker node can be updated in a clean way which removes all the saved data
1sudo phala update clean or with the data preserved
1sudo phala update Finally, restart your worker with:
1sudo phala start </description>
    </item>
    
    <item>
      <title>2.4 Use Console to Manage Your Mining</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/2-4-console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/2-4-console/</guid>
      <description>We highly recommend to read staking mechanism before using the Console.
 The Console
Miners and pool owners can use Console to manage Workers and StakePools. Also it provides an overview of the status of all the managed Workers and StakePools.
Console Manual Prerequisites  Create a Khala account as the pool Owner and Worker operator; Get the WorkerPublicKey from Worker and has bound the Worker to the Khala account above.</description>
    </item>
    
    <item>
      <title>3 Voting for Councillors</title>
      <link>https://wiki.phala.network/en-us/docs/governance/3-voting-for-councillors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/governance/3-voting-for-councillors/</guid>
      <description>The council is an elected body of on-chain accounts that are intended to represent the passive stakeholders of Phala and/or Khala. The council has two major tasks in governance: proposing referenda and vetoing dangerous or malicious referenda. For more information on the council, see the Governance page. This guide will walk you through voting for councillors in the elections.
Voting for Councillors Voting for councillors requires you to lock 5 PHA on Phala or 5 K-PHA on Khala for the duration of your vote.</description>
    </item>
    
    <item>
      <title>4 Frequently Asked Questions</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/4-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/4-faq/</guid>
      <description>To be updated.
 I. Increase Confidence Level Currently, Tier 1, 2, 3 are treated in the same way. No operation is needed if you are at these tiers. However, if you are at Tier 4 or 5, you can try the following tips. You can also join the Discord or Telegram miner group to discuss.
Got CONFIGURATION_NEEDED and CONFIGURATION_AND_SW_HARDENING_NEEDED  The EPID signature of the ISV enclave QUOTE has been verified correctly, but the additional configuration of the SGX platform may be needed (for further details see Advisory IDs).</description>
    </item>
    
    <item>
      <title>4.1 How to get better peers connectivity</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/4-1-how-to-get-better-peers-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/4-1-how-to-get-better-peers-connectivity/</guid>
      <description>The problem Some of our friends that running our nodes may found their nodes are struggling to connect to any peer which causes nodes to be dropped from the whole wonderful network. In this KB you may find why and what to do.
Stateful firewall As IPv4 is exhausting, also as there are some security concerns or some design considerations. There’s a lot of stateful firewalls between you and peers that run NAT, policy-based filter, or both.</description>
    </item>
    
    <item>
      <title>4.2 How to accelerate your node syncing if you haven&#39;t fully synced yet</title>
      <link>https://wiki.phala.network/en-us/docs/khala-mining/4-2-how-to-fast-sync-node-use-snapshot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-mining/4-2-how-to-fast-sync-node-use-snapshot/</guid>
      <description>Problem If your node is not up-to-date, a typical node log looks like
2021-09-15 13:33:27 [Relaychain] ⚙️ Syncing 10.4 bps, target=#9236775 (20 peers), best: #9227955 (0xa897…4f36), finalized #9227895 (0x1d6d…1527), ⬇ 1.7MiB/s ⬆ 657.8kiB/s 2021-09-15 13:33:27 [Parachain] ⚙️ Syncing 40.4 bps, target=#400531 (1 peers), best: #396657 (0xb898…6c02), finalized #396443 (0xf470…2f54), ⬇ 378.7kiB/s ⬆ 1.6kiB/s and best is too far from target.
This article shares a cheat way to accelerate your node syncing.</description>
    </item>
    
    <item>
      <title>Claim Test Token from Telegram Bot</title>
      <link>https://wiki.phala.network/en-us/docs/para-mining/claim-test-token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/para-mining/claim-test-token/</guid>
      <description>The following tutorials apply to Para-2 Testnet, which shares the same tokenomics parameters as the future Khala.
Before you start mining in Para-2 Testnet, you need to first get a Khala account and acquire test token from faucet (real PHA is needed in future Khala mining).
Claim Test Token from Telegram Bot  Get to Phala Faucet https://t.me/phalafaucet. You may need to download and install Telegram as prompted. Click &amp;ldquo;VIEW IN TELEGRAM&amp;rdquo; to join the group.</description>
    </item>
    
    <item>
      <title>Guidance of Delegation StakePool</title>
      <link>https://wiki.phala.network/en-us/docs/khala-user/stake-pool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/en-us/docs/khala-user/stake-pool/</guid>
      <description>MathJax = { tex: { inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;, &#39;\\]&#39;]], processEscapes: true, processEnvironments: true }, options: { skipHtmlTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;] } }; window.addEventListener(&#39;load&#39;, (event) = { document.querySelectorAll(&#34;mjx-container&#34;).forEach(function(x){ x.parentElement.classList += &#39;has-jax&#39;}) });   Delegator Token holders (i.e. delegators) can obtain mining rewards by delegating PHA to the StakePool, which can be understood as &amp;ldquo;depositing to earn interest&amp;rdquo;. This guide will introduce how to earn rewards through delegation in Phala Network.</description>
    </item>
    
  </channel>
</rss>
