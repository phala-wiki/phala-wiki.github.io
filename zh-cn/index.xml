<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phala Network Wiki on Phala Network 百科</title>
    <link>https://wiki.phala.network/zh-cn/</link>
    <description>Recent content in Phala Network Wiki on Phala Network 百科</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://wiki.phala.network/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Collator</title>
      <link>https://wiki.phala.network/zh-cn/docs/maintain/collator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/maintain/collator/</guid>
      <description>本条目正在征集翻译。  Collators on Phala (Khala) are supposed to be Gatekeepers, who also run the pRuntime as the Gatekeeper role, helping manage the keys in the network. However, Gatekeeper is not open for election now.  Concepts Phala Network is currently running its collators on Aura consensus. Aura is a simple block authoring engine that rotates the block producers among the registered collator candidates one by one.
 Host Session Api Manager Collator &amp;lt;===== [Session] &amp;lt;--------- [CollatorSelection] node pallet pallet On the blockchain, the block authoring is handled collaboratively by Session and CollatorSelection pallets.</description>
    </item>
    
    <item>
      <title>基于Docker Compose的部署示例</title>
      <link>https://wiki.phala.network/zh-cn/docs/prb/docker-compose-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/prb/docker-compose-example/</guid>
      <description>每当prb在Github Release上发布新版本时，Docker Hub会同步更新其容器镜像，您可以通过以下命令获取其最新版本:
1docker pull phalanetwork/prb 您可以通过使用prb的RPC进行符合您使用需求的代码集成而不需要对prb本身进行改动。使用容器技术对其进行管理比在Linux中直接运行容易得多。以下是使用Docker Compose部署prb的一个简单示例。
 注意: 此示例仅介绍了各个服务之间的关系，请您根据自己的需求进行环境配置。
 系统要求  Ubuntu LTS 20.04 Docker 20.10或更新 Docker Compose 1.29 或更新   Ubuntu默认APT源中的Docker版本太旧，请您根据https://docs.docker.com/engine/install/ 与https://docs.docker.com/compose/install/安装Docker和Docker Compose的最新版本。
  在生产环境中，请您使用Docker Hub中的预构建的镜像而非由源码自行构建以避免非预期的行为。
 环境准备  创建一个新的文件夹，然后用这里的样例创建和编辑docker-compose.yml； 运行docker-compose pull拉取最新镜像； 在Worker机上部署 pruntime； 在区块链上建立Stakepool。  基础服务 运行docker-compose up -d redis io启动基础服务。
在本示例中，Redis中的数据没有被持久化，其意外退出会破坏整个环境，请在生产环境中配置高可用的Redis服务。如果您需要在Docker Compose的网络环境外使用RPC，请暴露Redis的端口。
RocksDB/LevelDB数据将存放于环境变量中PHALA_DB_PREFIX所指定的目录中。其中，0目录将用于区块数据存储。1目录用于保存Pool和Worker数据（包括私钥，请务必备份）。
fetch服务 运行docker-compose up -d fetch启动fetch服务。
此服务将至少占用3个CPU核心:
 从中继链中获取包含justification的区块header； 从平行链中获取区块header和storage changes； 将区块数据编码为pruntime所接受的格式； 组织并合并上述数据以实现快速同步。  这所有的操作都是异步的，在同步时，您将看到这几个进程会占用大量的CPU时间。fetch服务可以根据实际情况停止和启动。
trade服务 运行docker-compose up -d trade启动trade服务。</description>
    </item>
    
    <item>
      <title>在Linux中直接部署</title>
      <link>https://wiki.phala.network/zh-cn/docs/prb/running-directly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/prb/running-directly/</guid>
      <description>由于无论是在开发环境还是生产环境中使用Docker部署都会更加方便，因此我们不建议直接在Linux中直接部署prb。
系统要求  git Redis 5 or newer Node.js 14 (Latest LTS) pnpm  安装依赖并生成Protobuf接口代码 1git submodule init 2git submodule update 3pnpm install 4pnpm proto:build # use `pnpm proto:darwin:build` in macOS 5pnpm proto:build_prpc # use `pnpm proto:darwin:build_prpc` in macOS 启动服务 使用pnpm start_module来启动prb进程, 所有参数都将从当前Shell中的环境变量读取。
1PHALA_MODULE=fetch # module to start 2NODE_ENV=development 3PHALA_DB_HOST=io # hostname/ip to io service 4PHALA_DB_PORT_BASE=9000 5PHALA_LOGGER_LEVEL=debug 6PHALA_PARENT_CHAIN_ENDPOINT=ws://127.0.0.0:9945 # parent chain substrate websocket endpoint 7PHALA_CHAIN_ENDPOINT=ws://127.0.0.0:9945 # parachain substrate websocket endpoint 8PHALA_REDIS_ENDPOINT=redis://127.</description>
    </item>
    
    <item>
      <title>使用Polkadot.js插件</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-user/polkadot-js-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-user/polkadot-js-extension/</guid>
      <description>安装 Polkadot 插件   进入 https://polkadot.js.org/extension/
  根据浏览器选择谷歌浏览器版本插件或火狐浏览器版本插件
  创建新账户  点击 Polkadot 插件，选择“创建新账户”，依次设置账户名及密码，保存好账户地址及助记词（务必妥善保存），确认后即可生成账户；  导入账户  账户导入方法1: 助记词导入   点击+号，选择“Import account from pre-existing seed (通过已有的助记词导入)”；  输入 KSM 账户助记词（切勿向他人透露你的助记词），每个单词之间用空格分隔。在下方下拉框中选择第一个“Allow use on any chain（允许在任何链上使用此账户）”。点击 NEXT（下一步）；  设置账户名称和新的密码。点击“Add the account with the supplied seed（用助记词添加账户)”；  导入成功   账户导入方法2: JSON 文件导入   点击+号，选择“Restore account from backup JSON file(通过 JSON 文件导入)”；  选择你此前保存的 KSM 账户 JSON 文件；  输入此前你为该账号设置的密码，点击“Restore”，即可成功导入；  点击账号右侧的三个点，在下拉选框中选择“Allow use on any chain（允许在任何链上使用此账户）”   </description>
    </item>
    
    <item>
      <title>1 民主模块</title>
      <link>https://wiki.phala.network/zh-cn/docs/governance/1-participate-in-democracy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/governance/1-participate-in-democracy/</guid>
      <description>公投议院是链上治理的三个机构之一，在 Phala 和 Khala 中都是如此。另外两个机构是理事会和技术委员会。
公投（Public Referenda ）可以由系统中的任何代币持有人提出和投票，只要他们绑定（代币）。在一个议案被提出后，其他人可以通过 “附议（second）“ 并拿出和原绑定金额相同的代币来赞成该议案。在每个提案启动阶段，附议最多的提案都会被移交到公投上进行投票表决。选民如果愿意将代币锁上更长的时间，也可以这样做，从而加大他们的投票权重。有关治理机制的更多详细信息，请参阅此处。 本指南将指导代币持有人如何使用 Khala 上的民主模块（Democracry Module），就公投进行提案和投票。
重要参数 使用民主模块投票时需要注意的重要参数如下：
 启动期：多久进行启动一次新公投。 投票期：多久进行一次全民投票。 紧急投票期：针对一个需要快速跟进的紧急公投的最短投票期。 最低存款额：公投议案保证金的最低金额。 执行期：锁定资金的最短期限，和议案从被批准到颁布之间的时间。 冷却期：提案被否决后不能重新提交的时间。  提交提案 提出议案首先需要你绑定一些代币。为了确保你有足够的代币进行最小的存款，你可以检查链状态下的参数。绑定的代币只有在提案提交（即进行投票）后才会释放；在公投之前，用户无法“撤销”提案并取回保证金。由于无法准确预测提案何时会被全民公投（假如有），这意味着任何绑定的代币的锁定期都是未知的。
 提案人不能撤销提案，即使这些提案永远不会变成公投。重要的是要注意，用于提议或附议提案的 PHA 不会在任何确定的时间范围内进行返还。
 在 Khala 网络上，您可以使用 “民主（Democracy）” 这一栏来提出新的提案。为了提交提案，你需要提交所谓的原像哈希（preimage hash）。原像哈希是要发布的提案的哈希值。获取原像哈希的最简单方法是单击 “Submit preimage” 按钮并配置您提案建议的操作。
例如，如果你想提议帐户“ALICE”的余额为 10 个代币，那么您的提案可能类似于下图所示。原象哈希0xd1ae46565118fc347a7c7a67dc68fb2fdeec6d77bc6ef4ae9cd9d4d964e0470c你可以复制此原像哈希并将其保存到下一步。此时不需要单击 Submit Preimage，尽管可以这样做。我们将在下一节讨论这个问题。
现在，您将单击“Submit Proposal”按钮，在名为“preimage hash”的输入中输入原像哈希，并在“locked balance”字段中输入最低存款额。点击橙色的“Submit proposal”按钮并确认交易。现在你应该会看到你的提议出现在页面的“议案”列中。
现在，任何访问该链的人都可以看到你的提案，其他人可以对其进行附议或提交 preimage。然而，很难说这个提案到底做了什么，因为它显示的是提案的哈希。其他持有者将无法判断他们是否支持它，直到有人提交了这项提案的实际 preimage。在下一步中，你将提交 preimage。
提交 Preimage 因为提交一个大的 preimage 的存储成本可能相当昂贵，所以提出一个提案的过程与提交该提案的 preimage 是分开的。preimage 作为一个单独的交易处理意味着如果您没有足够的资金，另一个账户可以为您提交 preimage，这也意味着您不必马上支付超预算的资金，因为你有 preimage hash 证明。
然而，在提案通过之前，您需要提交 preimage，否则提案无法实施。我们现在将向你演示如何执行此操作。
单击橙色的 “submit preimage” 按钮并将其配置为与之前获取 preimage hash 一样的操作。这一次，您不需要将哈希复制到另一个选项卡，而是继续执行并单击 “submit preimage” 并确认交易。</description>
    </item>
    
    <item>
      <title>1 计算节点的抵押机制</title>
      <link>https://wiki.phala.network/zh-cn/docs/tokenomic/1-mining-staking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/tokenomic/1-mining-staking/</guid>
      <description>简介 Phala Network为了实现计算节点的安全性，除了给计算节点设置安全等级之外，还在挖矿行为中引入了staking概念。每个计算节点通过抵押与自己CPU得分匹配的PHA代币数量，才能获得V值，从而进入挖矿系统开始挖矿。
如果计算节点表现与系统要求不符，则会被惩罚V值，从而引导计算节点网络状态符合规则。
不同于类似于 Polkadot 或其他 Proof-of-Stake 区块链，Phala区块链管理的计算节点数量可以达到100万个CPU核心的量级，即10万台节点以上。因此 Phala Network 抵押机制需要超越现有的Proof-of-Stake 设计，才能在性能和效率上满足需求 —— 对此我们提出了委托抵押（Delegate）设计，通过引入 StakePool 角色，我们允许任何人创建抵押池来连接计算节点和抵押者，抵押者将 $PHA 委托给 Stakepool，由 StakePool 对与池相关联的计算节点进行抵押和管理。
角色介绍    角色 介绍     Worker 计算节点，以CPU为单位。在 Phala Network 负责链下计算（隐私环境内）   Operator 由 Worker 授权的管理员，负责管理该 Worker 的挖矿行为   PoolOwner 创建 StakePool 的地址，负责对 Pool 和 Pool 绑定的 Worker 进行管理   StakePool 抵押池，作为矿机与抵押者之间资金流动的中间层，服务于挖矿抵押场景的链上操作 （pid 是 StakePool 的标识符，由系统自动生成）   Delegator 持有 $PHA 币的地址，可以通过委托抵押参与 Phala 挖矿行为中    角色关系     Operator Owner Delegator     Worker 每个 Worker 只能授权给一个 Operator ；一个 Operator 可以拥有多个 Worker 当某个 Worker 的 Operator 是某个 Pool 的 Owner 的时候，这个 Pool 可以抵押币给该 Worker /   StakePool 当某个 Pool 的 Owner 是某个 Worker 的 Operator 的时候，这个 Pool 可以抵押币给该 Worker 一个 Owner 可以创建多个 Pool ；每个 Pool 只能绑定一个 Owner 一个 Delegator 可以给多个 Pool 抵押；每个 Pool 也可以拥有多个 Delegator    计算节点与抵押池的关系 图 1 如图1，</description>
    </item>
    
    <item>
      <title>1.1 检查你的硬件、BIOS和系统</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-1-hardware-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-1-hardware-requirements/</guid>
      <description>Phala 硬件需求门槛 如何检查自己的设备支持 BIOS： 前往 Intel 官网查询自己的芯片是否支持 SGX
打开英特尔官网，搜索自己的CPU型号 如图所示，这样就是支持的芯片。 确认 BIOS 设置  首先打开百度，查询进入你的电脑的 BIOS 键是什么。每个品牌不一样。重启电脑，快速按下刚刚查到的键，进入 BIOS 界面。  找到 Security（安全选项） ，找到 Secure Boot（安全启动） ，选择 Disabled（关闭） 找到 Boot（启动选项） ，在 Boot Mode (启动模式) 里 启动 UEFI 找到 SGX 选项，优先选 Enabled，如果没有则选 Software Controlled。选择 Software Controlled 的，进入系统以后输入下面的指令启动驱动：    1wget https://github.com/Phala-Network/sgx-tools/releases/download/0.1/sgx_enable 2sudo chmod +x sgx_enable 3sudo ./sgx_enable  如何打开 Ubuntu 终端
在桌面点击右键 →终端（Open in Terminal）**
 Ubuntu 18.04 / 20.04  目前暂不支持这两个版本以外的版本 怎么安装 Ubuntu 18.</description>
    </item>
    
    <item>
      <title>1.2 下载并安装Phala脚本</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-2-download-setup-scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-2-download-setup-scripts/</guid>
      <description>请注意，在你进行以下操作之前请确保你已经阅读了本章节以前的全部内容。已经检查过你的硬件、BIOS设置（若找不到SGX选项可以先往后做进行测试）。并且已经安装好Ubuntu18.04或Ubuntu20.04。
下载Phala工具包地址：https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/main.zip，或者可以用wget下载，命令如下：
1cd ~ 2sudo apt-get install wget 3sudo apt-get install unzip 4wget https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/main.zip 5unzip main.zip 6cd solo-mining-scripts-main 使用sgx_enable激活SGX功能 在phala脚本目录打开终端，输入以下指令后电脑会重启：
1cd ~/solo-mining-scripts-main 2sudo chmod +x sgx_enable 3sudo ./sgx_enable 4sudo reboot 安装Phala工具 在phala脚本目录打开终端，输入以下指令：
1cd ~/solo-mining-scripts-main 2sudo chmod +x install.sh 3sudo ./install.sh cn </description>
    </item>
    
    <item>
      <title>1.3 SGX测试和信任分级</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-3-confidential-level-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-3-confidential-level-evaluation/</guid>
      <description>首先需要先按照简易安装模式安装Phala脚本 1sudo phala install ​ 重要提示：请大家首先关注安全等级（在报告的最后一行），安全等级目前是网络评判的唯一标准！请大家务必先查看安全等级后再询问。
如果你看到SGX_ERROR_UPDATE_NEEDED这样的提示，则说明 BIOS 上缺少 Intel 要求 SGX 环境必须包含的工具，所以评估系统不满足 SGX 的安全标准。解决方法是更新你的 BIOS 版本，怎么更新请百度自己厂商的教程。如果这已经该厂商最新版 BIOS，则无法挖矿。
在报告的最后一行会显示你的安全等级（1～5），如果你这里显示的是Can&#39;t give a confidenceLevel due to don&#39;t meet minimum requirement则代表你的机器是无法参与挖矿的。
SGX测试完毕后，输入ls /dev | grep sgx，如果运行有返回sgx或者isgx，则说明驱动正常运行。
如果没有返回，请到《检查你的硬件、BIOS与系统》一章按照教程调试主板，设置好后回到本章继续进行SGX测试。
自检指令 1sudo phala sgx-test 正常的结果 1Detecting SGX, this may take a minute... 2✔ SGX instruction set 3 ✔ CPU support 4 ✔ CPU configuration 5 ✔ Enclave attributes 6 ✔ Enclave Page Cache 7 SGX features 8 ✔ SGX2 ✔ EXINFO ✘ ENCLV ✘ OVERSUB ✘ KSS 9 Total EPC size: 94.</description>
    </item>
    
    <item>
      <title>1.4 测试Worker性能分</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-4-benchmarking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-4-benchmarking/</guid>
      <description>如果你没有运行过SGX测试首先需要先按照简易安装模式安装Phala脚本 1sudo phala install 重要提示：如果你曾经已经安装了Phala脚本只需要升级脚本即可。升级方法如下：
1sudo phala update script 性能分数测试方法： 1sudo phala score-test [要使用的核心数量，核心数量根据CPU情况而定] 2例如：sudo phala score-test X  一定要记得替换核心数，使用你的CPU最大核心数跑分测试，否则跑分将不准确！
 跑分用的Docker不会自动结束关闭，结束跑分的方法：
1sudo phala stop bench 在跑分结束后，程序会自动上传你的配置和跑分，如果你不希望上传，请手动输入N以结束上传。
另外，受各种环境因素影响，性能评分有可能产生一定程度的波动。此评分为预览版本，预备主网上线有变化的可能！</description>
    </item>
    
    <item>
      <title>2 Solo挖矿环境配置</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-solo-mining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-solo-mining/</guid>
      <description>如果你已经进行了SGX测试、性能测试，那么你的配置应该已经完成，可以忽略，直接下一步 ​
只需要运行（会自动请求设置使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址）：
1sudo phala install  Solo挖矿模式需要让一个GAS费地址对应一台Worker。GAS费地址不能复用。  当你希望更改使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址：
1sudo phala config set 当你希望查看配置（使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址），你可以这样做：
1sudo phala config show 注意：如果你使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址等输入错误，脚本会自动请求重新输入，只有输入正确的信息才会向下运行。为保证挖矿可以进行，Gas费账户最低余额不得低于0.1PHA</description>
    </item>
    
    <item>
      <title>2 加入理事会议会</title>
      <link>https://wiki.phala.network/zh-cn/docs/governance/2-join-the-council/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/governance/2-join-the-council/</guid>
      <description>理事会是一个选举机构，代表 Phala 和/或 Khala 的被动利益相关者。理事会在治理方面有两个主要任务：提出公投和否决危险或恶意的公投。有关理事会的更多信息，请参阅治理页面。本指南将向您介绍如何获得理事会候选资格。
提交候选人 提交理事会候选人需要少量的 PHA/K-PHA 保证金。除非您的候选人获胜，否则保证金将被没收。如果您在竞选失败前手动操作放弃，可以收回保证金。每轮之后还将选出亚军作为保留成员，以防其中一名获胜者被强行移除。
 目前在 Phala/Khala 上申请理事会候选人的保证金是 10 PHA/K-PHA。
 在提交前宣布您的理事会主张会是一个好主意，这样您的支持者就会知道他们何时可以开始投票给您。如果没有其他人投票，您也可以为自己投票。
转到 Khala Dashboard 并导航到“Council”选项卡。单击右侧显示“提交候选人”的按钮。
完成交易后，您将看到您的帐户出现在“候选人”这一行的下方。
对候选人进行投票 提交候选资格的按钮旁边是另一个名为“投票”的按钮。您将单击此按钮为自己投票（可选）。
理事会使用 Phragmén 批准投票，这也用于验证人选举。这意味着您最多可以选择 5 位不同的候选人进行投票，您的份额将被他们均分。在这篇指导中，您可以单击帐户选择您自己的候选人。</description>
    </item>
    
    <item>
      <title>2.1 部署 Worker 节点</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-1-deploy-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-1-deploy-worker-node/</guid>
      <description>Start Mining 首先你要完成上一步的安装，如果没有做，请移步上一章节
在phala脚本目录打开终端，输入以下指令:
1sudo phala start </description>
    </item>
    
    <item>
      <title>2.2 查看Worker状态</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-2-verify-worker-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-2-verify-worker-status/</guid>
      <description>在phala脚本目录打开终端，输入以下指令: 1sudo phala status 正确的状态应该如下图：
注意：
这里会显示你的节点名称、核心使用数、Gas费地址及余额、抵押池账户地址以及Worker-publish-key 请注意如果你的Gas费账户余额低于2PHA此处将出现警告，若你注意到警告请及时向Gas费账户补充PHA。</description>
    </item>
    
    <item>
      <title>2.3 Worker升级</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-3-upgrade-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-3-upgrade-worker-node/</guid>
      <description>停止挖矿 1sudo phala stop 清空节点数据并升级 1sudo phala update clean 2sudo phala start 不清空节点数据升级 1sudo phala update 2sudo phala start </description>
    </item>
    
    <item>
      <title>2.4 使用控制台</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-4-console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-4-console/</guid>
      <description>控制台链接入口
简介 控制台面向的用户主要是矿工及矿池主，囊括了对 Worker 及抵押池的链上操作及数据展示
名词解释  WorkerPublicKey：Worker 在注册完成后获得的唯一 ID，以 0x 开头 pid：即抵押池 ID，抵押池的唯一 ID  操作指南 准备  有 PHA 的账户,作为抵押池所有者/Worker 操作者 Worker 的 WorkerPublicKey，并且该 Worker 已绑定上述账户  主流程   连接账户（创建和导入账户教程）
  创建抵押池
 点击 Create Pool!  在弹窗中点击 Confirm 在插件中点击签名此交易，之后等待二十几秒 创建成功的抵押池会出现在 Stakepool 列表中    设置抵押池（可选）
  手续费
 点击相应抵押池的 Set Payout Pref 在弹窗中输入手续费，默认是 0，可设范围是 0-100% 点击 Confirm 提交交易 可在 Stakepool 列表中看到该值更新    最大抵押额</description>
    </item>
    
    <item>
      <title>3 为理事会议员投票</title>
      <link>https://wiki.phala.network/zh-cn/docs/governance/3-voting-for-councillors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/governance/3-voting-for-councillors/</guid>
      <description>理事会是一个选举机构，代表 Phala 和/或 Khala 的被动利益相关者。理事会在治理方面有两个主要任务：提出公投和否决危险或恶意的公投。有关理事会的更多信息，请参阅治理页面。本指南将引导您在选举中为议员投票。
为议员投票 投票给议员需要你在投票期间在 Phala 上锁定 5 PHA 或在 Khala 上锁定 5 K-PHA。
 注意：投票和质押锁定可以重叠，用户可以使用质押资金为议员投票和/或在公投中使用这些资金。用户只能将这些资金转移到另一个帐户。
  警告：如果您的余额已绑定，则不能使用未绑定的代币进行此锁定。您必须等到至少有足够的未绑定代币才能投票。
 与验证人选举一样，您最多可以支持 5 名不同的议员，并且您的投票将在所选组中平均分配。与验证人选举不同，您保留的代币没有解绑期。一旦您取消投票，您的代币将再次具有流动性。
 警告：当您为议员投票时，您有责任不将您的全部余额放入保留值中。最好保留足够的 PHA/K-PHA 来支付交易费用。
 转到 Khala 应用程序仪表板 ，然后单击“理事会”选项卡。在窗口的右侧有两个蓝色按钮，单击显示“投票”的按钮。
由于理事会使用批准投票，当您投票时，您表示您赞成哪些候选人，并且您投票的代币将在选定的候选人中平均分配。滑动滑块至“赞成”，你最多可选 5名希望当选理事会成员的候选人。配置完毕后，提交交易。
当您的交易被确认后，您应该会立即看到您的投票出现在界面中。
删除您的投票 为了取回您保留的代币，您需要取消投票。 仅在您完成选举并希望保留的代币不再计入您批准的议员时才取消您的选票。
转到 Khala 应用程序仪表板上的“Governance（治理）”&amp;gt;“Council（理事会）”选项卡。
在“Overview（概览）”选项卡下，单击“Vote（投票）”,发起“Unvote all（取消全部投票）”选项。
当交易包含在一个区块中时，您应该让剩余代币恢复流动，您的选票将不再计入下一期选举的任何议员的票数。</description>
    </item>
    
    <item>
      <title>4 FAQ</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/4-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/4-faq/</guid>
      <description>陆续更新中。
 I. 增加信任等级 目前等级 1、2、3 会被当作同样的信任等级来看待，因此如果你只是2或3级，无需去再去提升等级。但如果你的等级为4或5，则可以参考以下建议来操作。与此同时，我们鼓励加入我们的 Telegram 或 Discord 群来讨论与分享你的经验。
遇到提示 CONFIGURATION_NEEDED 或 CONFIGURATION_AND_SW_HARDENING_NEEDED  The EPID signature of the ISV enclave QUOTE has been verified correctly, but additional configuration of SGX platform may be needed (for further details see Advisory IDs). The platform has not been identified as compromised and thus it is not revoked. It is up to the Service Provider to decide whether or not to trust the content of the QUOTE, and whether or not to trust the platform performing the attestation to protect specific sensitive information.</description>
    </item>
    
    <item>
      <title>4.1 如何提高和P2P节点的连接性</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/4-1-how-to-get-better-peers-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/4-1-how-to-get-better-peers-connectivity/</guid>
      <description>面临的问题 一些朋友在运行节点的时候发现他们的节点很难连接到其他的节点，比如日志中
1[Relaychain] 💤 Idle (3 peers), best: #8949573 (0x1fbd…efce), finalized #8949248 (0x102e…0032), ⬇ 1.1kiB/s ⬆ 1.0kiB/s 这里 3 peers 意思是只连接到三个外部的节点，这种情况会遇到诸如节点卡住了不继续同步，甚至是报错的问题，遇到这些问题通常可以重启节点来解决，但是会影响到挖矿。
这种情况可以检查网络是不是这篇技术文章你可以知道怎么做以及为什么。
太长不读 问运营商要公网IP，把自己路由器配个DMZ或者配个端口映射，把没必要的NAT关了。
原理解释：状态防火墙 随着IPv4的耗尽，一些安全考量以及一些设计上的问题，你的节点到伙伴节点的链接之间可能存在着很多状态防火墙。这些状态防火墙运行着NAT（网络地址转换），过滤策略或者别的一些东西。这增加了建立连接的复杂性，也造成了很多问题。
防火墙做了什么 对来源地址的转换（Source NAT） 对来源地址的转换使得很多设备可以用同一个公网地址。这是依靠防火墙跟踪和记录每个主机向外建立的连接来实现的。所有发往防火墙外面的数据包的来源地址都被改成了防火墙的地址。这样当远程主机回复数据包的时候就会发给防火墙。防火墙知道谁才是真正的目的来数据包送出去。
但如果一些防火墙外面的远程主机想要向防火墙里面的主机建立连接，就没有办法了。数据包到达防火墙，防火墙去查它维护的连接的列表，大多数时候什么都查不到。所以防火墙就把数据包丢了。
防火墙可能用不同的信息和办法来维护连接的状态，这会造成不同的结果。你可以看看 https://zh.wikipedia.org/wiki/网络地址转换#不同類型的-{NAT}- 来知道怎么回事。
请注意，网络地址转换不一定只是你的网络设备运行的，你的运营商可能也在这样做；不止是名叫防火墙的设备有能力这么做，几乎所有家用的“路由器”盒子都隐含了这样的功能。你可能已经处在很多层地址转换后面。
过滤策略 很多网络提供商和托管提供商会用一些过滤策略来丢你发出或者发给你的包。这是为了安全或者是防止滥用，因为P2P连接经常被用来传播不法内容。这可能直接丢掉你和伙伴的链接。
怎么办 避免麻烦 你应该先咨询你的网络提供商是不是在给你执行来源地址转换或者过滤策略。如果是的话，和他们谈谈让他们不要这么办。
配置设备来让连接性好一点 如果你环境所限一定得跑来源地址转换，你还可以改改你的设备配置来让连接性好一点。
目的地址转换（Destination NAT），暴露特定主机以及UPnP 你可以配置目的地址转换来暴露你的节点正在监听的端口；一些家用设备可能可以配置DMZ主机来收所有发进来的没被追踪到连接的包。
有一些家用设备可以设置一下监听UPnP来自动设置目的地址转换，但通常不稳定，所以一般不要考虑。</description>
    </item>
    
    <item>
      <title>4.2 如果还没有同步好挖矿节点，快速追上的办法</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/4-2-how-to-fast-sync-node-use-snapshot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/4-2-how-to-fast-sync-node-use-snapshot/</guid>
      <description>面临的问题 如果你的节点没有同步到最新状态，
典型的没有同步到最新的现象是，在节点的日志中看到类似这样的显示
2021-09-15 13:33:27 [Relaychain] ⚙️ Syncing 10.4 bps, target=#9236775 (20 peers), best: #9227955 (0xa897…4f36), finalized #9227895 (0x1d6d…1527), ⬇ 1.7MiB/s ⬆ 657.8kiB/s 2021-09-15 13:33:27 [Parachain] ⚙️ Syncing 40.4 bps, target=#400531 (1 peers), best: #396657 (0xb898…6c02), finalized #396443 (0xf470…2f54), ⬇ 378.7kiB/s ⬆ 1.6kiB/s 并且 best 和 target 相差很大。
此时你可以考虑使用这里介绍的方法快速追上最新的状态。
注意：如果你的节点已经很接近最新的区块高度（大约推算几个小时就能追上）或者跟最新区块保持同步，请不要操作了，静待自行同步完成即可。
下载全量数据快照并解压缩（最新更新日期：2021年9月17日） 我们推荐使用BT下载（种子文件），请在下载完成后保持做种。种子文件的sha256校验和为
$ sha256sum khala.torrent 7f517ac05bc8a2840055a4f8d59f147c2bdd92c10281f4d45ab963908c141f05 khala.torrent 在下载完成后，可以通过校验sha256校验和来确保数据完整性
$ sha256sum khala-snapshot-210915.tar.gz d1ad677bb2421d17e12f7bed2af95beaf7343a2f9c79b4b07b85a0faa521467c khala-snapshot-210915.tar.gz 下载完成后解压缩，得到 khala-node 目录
注意：全量数据文件约 220G，全量的数据文件解压缩后大约 350G，也就是说如果要解压缩到本地磁盘，你需要 600G 的磁盘可用空间，所以请预留好足够的空间，如果硬盘空间不够，可以考虑解压缩到其他存储，比如移动硬盘</description>
    </item>
    
    <item>
      <title>抵押池委托指南</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-user/stake-pool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-user/stake-pool/</guid>
      <description>MathJax = { tex: { inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;, &#39;\\]&#39;]], processEscapes: true, processEnvironments: true }, options: { skipHtmlTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;] } }; window.addEventListener(&#39;load&#39;, (event) = { document.querySelectorAll(&#34;mjx-container&#34;).forEach(function(x){ x.parentElement.classList += &#39;has-jax&#39;}) });   委托人 持币者（即委托人, Delegator）可通过将 PHA 委托给抵押池分得挖矿收益（类似于存币生息）。本指南将介绍如何在 Phala Network 上通过委托代币赚取收益。
如何委托 委托简介 Phala Network 协议允许持币者将 PHA 委托给抵押池，由抵押池的所有者使用 PHA 代币去挖矿抵押，获得的挖矿奖励会按委托份额占比分给委托人。
选择抵押池 进入 Phala Network 委托页面
委托页面首页是抵押池的详情列表，用户可以在该页面挑选抵押池并进行委托，该列表中所有数据均支持排序。关于如何选择抵押池，可参考以下建议：
  关注各数值的实时值，这里主要参考 APR 和 Cap Gap 这两个数值，分别代表实时年化收益率和剩余额度；</description>
    </item>
    
    <item>
      <title>领取Para2测试币</title>
      <link>https://wiki.phala.network/zh-cn/docs/para-mining/claim-test-token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/para-mining/claim-test-token/</guid>
      <description>领取Para2测试币 你可以通过 Phala 水龙头免费自助获取测试币。 由于以太坊矿工费高昂，不推荐你使用此前的燃烧方式。 领取测试币后需要保证stash账号和cntroller账号都有一些测试币，后续才能顺利测试
 测试币无任何价值，不可兑换，仅供测试用
 Telegram(需科学) 第一步：点击水龙头群链接 https://t.me/phalafaucet ，按照提示下载软件。点击“View in Telegram”加入水龙头群组。
第二步：进群后先回复机器人提出的数学题 如机器人发送（7+1），请回复8。否则机器人将不会给你发测试币。
第三步：设置username可见。 方法Setting——右上角edit——设置username。否则机器人将无法识别你的申领信息。
第四步：进入群组后发送 /drip [你的测试网地址] ，如下图。
Bananatok聊天软件（无需科学） 如果无法科学上网，可以下载Bananatok聊天软件0.plus/phalafaucet，无需科学也可登入TG社群。 ​
申领流程与上述Telegram方式相同，只有设置用户名的位置不同： 右下角我的——设置——右上角编辑——用户名 ​
注意：如果发了消息机器人没反应，检查以下：  进群后没回复数学题，退群重进 设置里用户名没有公开 drip后面没加空格 drip后面不要用折行 地址后面或最开头斜杠前面多了空格  如你不会使用Telegram软件，请前往矿工微信群询问其他矿工的帮助</description>
    </item>
    
  </channel>
</rss>
