<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phala Network Wiki on Phala Network 百科</title>
    <link>https://wiki.phala.network/zh-cn/</link>
    <description>Recent content in Phala Network Wiki on Phala Network 百科</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://wiki.phala.network/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于Docker Compose的部署示例</title>
      <link>https://wiki.phala.network/zh-cn/docs/prb/docker-compose-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/prb/docker-compose-example/</guid>
      <description>每当prb在Github Release上发布新版本时，Docker Hub会同步更新其容器镜像，您可以通过以下命令获取其最新版本:
1docker pull phalanetwork/prb 您可以通过使用prb的RPC进行符合您使用需求的代码集成而不需要对prb本身进行改动。使用容器技术对其进行管理比在Linux中直接运行容易得多。以下是使用Docker Compose部署prb的一个简单示例。
 注意: 此示例仅介绍了各个服务之间的关系，请您根据自己的需求进行环境配置。
 系统要求  Ubuntu LTS 20.04 Docker 20.10或更新 Docker Compose 1.29 或更新   Ubuntu默认APT源中的Docker版本太旧，请您根据https://docs.docker.com/engine/install/ 与https://docs.docker.com/compose/install/安装Docker和Docker Compose的最新版本。
  在生产环境中，请您使用Docker Hub中的预构建的镜像而非由源码自行构建以避免非预期的行为。
 环境准备  创建一个新的文件夹，然后用这里的样例创建和编辑docker-compose.yml； 运行docker-compose pull拉取最新镜像； 在Worker机上部署 pruntime； 在区块链上建立Stakepool。  基础服务 运行docker-compose up -d redis io启动基础服务。
在本示例中，Redis中的数据没有被持久化，其意外退出会破坏整个环境，请在生产环境中配置高可用的Redis服务。如果您需要在Docker Compose的网络环境外使用RPC，请暴露Redis的端口。
RocksDB/LevelDB数据将存放于环境变量中PHALA_DB_PREFIX所指定的目录中。其中，0目录将用于区块数据存储。1目录用于保存Pool和Worker数据（包括私钥，请务必备份）。
fetch服务 运行docker-compose up -d fetch启动fetch服务。
此服务将至少占用3个CPU核心:
 从中继链中获取包含justification的区块header； 从平行链中获取区块header和storage changes； 将区块数据编码为pruntime所接受的格式； 组织并合并上述数据以实现快速同步。  这所有的操作都是异步的，在同步时，您将看到这几个进程会占用大量的CPU时间。fetch服务可以根据实际情况停止和启动。
trade服务 运行docker-compose up -d trade启动trade服务。</description>
    </item>
    
    <item>
      <title>在Linux中直接部署</title>
      <link>https://wiki.phala.network/zh-cn/docs/prb/running-directly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/prb/running-directly/</guid>
      <description>由于无论是在开发环境还是生产环境中使用Docker部署都会更加方便，因此我们不建议直接在Linux中直接部署prb。
系统要求  git Redis 5 or newer Node.js 14 (Latest LTS) pnpm  安装依赖并生成Protobuf接口代码 1git submodule init 2git submodule update 3pnpm install 4pnpm proto:build # use `pnpm proto:darwin:build` in macOS 5pnpm proto:build_prpc # use `pnpm proto:darwin:build_prpc` in macOS 启动服务 使用pnpm start_module来启动prb进程, 所有参数都将从当前Shell中的环境变量读取。
1PHALA_MODULE=fetch # module to start 2NODE_ENV=development 3PHALA_DB_HOST=io # hostname/ip to io service 4PHALA_DB_PORT_BASE=9000 5PHALA_LOGGER_LEVEL=debug 6PHALA_PARENT_CHAIN_ENDPOINT=ws://127.0.0.0:9945 # parent chain substrate websocket endpoint 7PHALA_CHAIN_ENDPOINT=ws://127.0.0.0:9945 # parachain substrate websocket endpoint 8PHALA_REDIS_ENDPOINT=redis://127.</description>
    </item>
    
    <item>
      <title>1 Phala挖矿抵押设计</title>
      <link>https://wiki.phala.network/zh-cn/docs/tokenomic/1-mining-staking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/tokenomic/1-mining-staking/</guid>
      <description>简介 Phala Network为了实现计算节点的安全性，除了给计算节点设置安全等级之外，还在挖矿行为中引入了staking概念。每个计算节点通过抵押与自己CPU得分匹配的PHA代币数量，才能获得V值，从而进入挖矿系统开始挖矿。
如果计算节点表现与系统要求不符，则会被惩罚V值，从而引导计算节点网络状态符合规则。
角色介绍    角色 介绍 识别符     Worker 计算节点，以cpu为单位。在Phala网络负责链下计算（隐私环境内） worker Key   Operator 由worker授权的管理员，负责管理该worker的挖矿行为 operator key   Owner 创建StakePool的地址，负责对pool和pool绑定的worker进行管理 owner key   StakePool 抵押池，作为矿机与抵押者之间资金流动的中间层，服务于挖矿抵押场景的链上操作 pid （系统自动生成）   Staker 持有PHA币的地址，可以通过stake参与Phala挖矿行为中 staker key    角色关系     Operator Owner Staker     Worker 每个worker只能授权给一个operator；一个operator可以拥有多个worker 当某个worker的operator是某个pool的owner的时候，这个pool可以抵押币给该worker /   StakePool 当某个pool的owner是某个worker的operator的时候，这个pool可以抵押币给该worker 一个owner可以创建多个pool；每个pool只能绑定一个owner 一个staker可以给多个pool抵押；每个pool也可以拥有多个staker    计算节点与抵押池的关系 Figure 1 Worker-StakePool 如图1，</description>
    </item>
    
    <item>
      <title>1.1 检查你的硬件、BIOS和系统</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-1-hardware-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-1-hardware-requirements/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  Phala 硬件需求门槛 如何检查自己的设备支持 BIOS： 前往 Intel 官网查询自己的芯片是否支持 SGX
打开英特尔官网，搜索自己的CPU型号 如图所示，这样就是支持的芯片。 确认 BIOS 设置  首先打开百度，查询进入你的电脑的 BIOS 键是什么。每个品牌不一样。重启电脑，快速按下刚刚查到的键，进入 BIOS 界面。  找到 Security（安全选项） ，找到 Secure Boot（安全启动） ，选择 Disabled（关闭） 找到 Boot（启动选项） ，在 Boot Mode (启动模式) 里 启动 UEFI 找到 SGX 选项，优先选 Enabled，如果没有则选 Software Controlled。选择 Software Controlled 的，进入系统以后输入下面的指令启动驱动：    1wget https://github.com/Phala-Network/sgx-tools/releases/download/0.1/sgx_enable 2sudo chmod +x sgx_enable 3sudo .</description>
    </item>
    
    <item>
      <title>1.2 下载并安装Phala脚本</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-2-download-setup-scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-2-download-setup-scripts/</guid>
      <description> Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  请注意，在你进行以下操作之前请确保你已经阅读了本章节以前的全部内容。已经检查过你的硬件、BIOS设置（若找不到SGX选项可以先往后做进行测试）。并且已经安装好Ubuntu18.04或Ubuntu20.04。
下载Phala工具包地址：https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/para.zip，或者可以用wget下载，命令如下：
1cd ~ 2sudo apt-get install wget 3sudo apt-get install unzip 4wget https://github.com/Phala-Network/solo-mining-scripts/archive/refs/heads/para.zip 5unzip para.zip 6cd solo-mining-scripts-para 使用sgx_enable激活SGX功能 在phala脚本目录打开终端，输入以下指令后电脑会重启：
1cd ~/solo-mining-scripts-para 2sudo chmod +x sgx_enable 3sudo ./sgx_enable 4sudo reboot 安装Phala工具 在phala脚本目录打开终端，输入以下指令：
1cd ~/solo-mining-scripts-para 2sudo chmod +x install.sh 3sudo ./install.sh cn </description>
    </item>
    
    <item>
      <title>1.3 SGX测试和信任分级</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-3-confidential-level-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-3-confidential-level-evaluation/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  首先需要先按照简易安装模式安装Phala脚本 1sudo phala install ​ 重要提示：请大家首先关注安全等级（在报告的最后一行），安全等级目前是网络评判的唯一标准！请大家务必先查看安全等级后再询问。
如果你看到SGX_ERROR_UPDATE_NEEDED这样的提示，则说明 BIOS 上缺少 Intel 要求 SGX 环境必须包含的工具，所以评估系统不满足 SGX 的安全标准。解决方法是更新你的 BIOS 版本，怎么更新请百度自己厂商的教程。如果这已经该厂商最新版 BIOS，则无法挖矿。
在报告的最后一行会显示你的安全等级（1～5），如果你这里显示的是Can&#39;t give a confidenceLevel due to don&#39;t meet minimum requirement则代表你的机器是无法参与挖矿的。
SGX测试完毕后，输入ls /dev | grep sgx，如果运行有返回sgx或者isgx，则说明驱动正常运行。
如果没有返回，请到《检查你的硬件、BIOS与系统》一章按照教程调试主板，设置好后回到本章继续进行SGX测试。
自检指令 1sudo phala sgx-test 正常的结果 1Detecting SGX, this may take a minute... 2✔ SGX instruction set 3 ✔ CPU support 4 ✔ CPU configuration 5 ✔ Enclave attributes 6 ✔ Enclave Page Cache 7 SGX features 8 ✔ SGX2 ✔ EXINFO ✘ ENCLV ✘ OVERSUB ✘ KSS 9 Total EPC size: 94.</description>
    </item>
    
    <item>
      <title>1.4 测试Worker性能分</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/1-4-benchmarking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/1-4-benchmarking/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  如果你没有运行过SGX测试首先需要先按照简易安装模式安装Phala脚本 1sudo phala install 重要提示：如果你曾经已经安装了Phala脚本只需要升级脚本即可。升级方法如下：
1sudo phala update script 性能分数测试方法： 1sudo phala score-test [要使用的核心数量，核心数量根据CPU情况而定] 2例如：sudo phala score-test X  一定要记得替换核心数，使用你的CPU最大核心数跑分测试，否则跑分将不准确！
 跑分用的Docker不会自动结束关闭，结束跑分的方法：
1sudo phala stop bench 在跑分结束后，程序会自动上传你的配置和跑分，如果你不希望上传，请手动输入N以结束上传。
另外，受各种环境因素影响，性能评分有可能产生一定程度的波动。此评分为预览版本，预备主网上线有变化的可能！</description>
    </item>
    
    <item>
      <title>2 单节点挖矿（Para1版本）</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-solo-mining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-solo-mining/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  领取测试币 你可以通过 Phala 水龙头免费自助获取测试币。 由于以太坊矿工费高昂，不推荐你使用此前的燃烧方式。 领取测试币后需要保证stash账号和cntroller账号都有一些测试币，后续才能顺利测试
 测试币无任何价值，不可兑换，仅供测试用
 Telegram(需科学) 第一步：点击水龙头群链接 https://t.me/phalafaucet ，按照提示下载软件。点击“View in Telegram”加入水龙头群组。
第二步：进群后先回复机器人提出的数学题 如机器人发送（7+1），请回复8。否则机器人将不会给你发测试币。
第三步：设置username可见。 方法Setting——右上角edit——设置username。否则机器人将无法识别你的申领信息。
第四步：进入群组后发送 /drip [你的测试网地址] ，如下图。
Bananatok聊天软件（无需科学） 如果无法科学上网，可以下载Bananatok聊天软件0.plus/phalafaucet，无需科学也可登入TG社群。 ​
申领流程与上述Telegram方式相同，只有设置用户名的位置不同： 右下角我的——设置——右上角编辑——用户名 ​
注意：如果发了消息机器人没反应，检查以下：  进群后没回复数学题，退群重进 设置里用户名没有公开 drip后面没加空格 drip后面不要用折行 地址后面或最开头斜杠前面多了空格  如你不会使用Telegram软件，请前往矿工微信群询问其他矿工的帮助</description>
    </item>
    
    <item>
      <title>2.1 环境配置</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-1-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-1-configuration/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  如果你已经进行了SGX测试、性能测试，那么你的配置应该已经完成，可以忽略，直接下一步 ​
只需要运行（会自动请求设置使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址）：
1sudo phala install  Solo挖矿模式需要让一个GAS费地址对应一台Worker。GAS费地址不能复用。  当你希望更改使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址：
1sudo phala config set 当你希望查看配置（使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址），你可以这样做：
1sudo phala config show 注意：如果你使用核心数、节点名称、Gas费账户助记词、抵押池owner账户地址等输入错误，脚本会自动请求重新输入，只有输入正确的信息才会向下运行。为保证挖矿可以进行，Gas费账户最低余额不得低于0.1PHA</description>
    </item>
    
    <item>
      <title>2.2 部署 Worker 节点</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-2-deploy-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-2-deploy-worker-node/</guid>
      <description> Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  Start Mining 首先你要完成上一步的安装，如果没有做，请移步上一章节
在phala脚本目录打开终端，输入以下指令:
1sudo phala start </description>
    </item>
    
    <item>
      <title>2.3 查看Worker状态</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-3-verify-worker-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-3-verify-worker-status/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  在phala脚本目录打开终端，输入以下指令: 1sudo phala status 正确的状态应该如下图：
注意：
这里会显示你的节点名称、核心使用数、Gas费地址及余额、抵押池账户地址以及Worker-publish-key 请注意如果你的Gas费账户余额低于2PHA此处将出现警告，若你注意到警告请及时向Gas费账户补充PHA。</description>
    </item>
    
    <item>
      <title>2.4 Worker升级</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-4-upgrade-worker-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-4-upgrade-worker-node/</guid>
      <description> Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  停止挖矿 1sudo phala stop 清空节点数据并升级 1sudo phala update clean 2sudo phala start 不清空节点数据升级 1sudo phala update 2sudo phala start </description>
    </item>
    
    <item>
      <title>2.5 使用控制台</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/2-5-console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/2-5-console/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。  控制台链接入口
简介 控制台面向的用户主要是矿工及矿池主，囊括了对 Worker 及抵押池的链上操作及数据展示
名词解释  WorkerPublicKey：Worker 在注册完成后获得的唯一 ID，以 0x 开头 pid：即抵押池 ID，抵押池的唯一 ID  操作指南 准备  有 PHA 的账户,作为抵押池所有者/Worker 操作者 Worker 的 WorkerPublicKey，并且该 Worker 已绑定上述账户  主流程   连接账户（创建和导入账户教程）
  创建抵押池
 点击 Create Pool!  在弹窗中点击 Confirm 在插件中点击签名此交易，之后等待二十几秒 创建成功的抵押池会出现在 Stakepool 列表中    设置抵押池（可选）
  手续费
 点击相应抵押池的 Set Payout Pref 在弹窗中输入手续费，默认是 0，可设范围是 0-100% 点击 Confirm 提交交易 可在 Stakepool 列表中看到该值更新    最大抵押额</description>
    </item>
    
    <item>
      <title>3 FAQ</title>
      <link>https://wiki.phala.network/zh-cn/docs/khala-mining/4-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.phala.network/zh-cn/docs/khala-mining/4-faq/</guid>
      <description>Para-1 是 Phala Network (以及 Khala Network) 的第一版平行链测试网。测试网的目的是在 Khala Network 上线挖矿子系统前及早发现并解决问题，同时收集来自社区的反馈。因此在测试网络中，频繁的修改与升级是正常的。除非特殊提及，本教程中所有的区块链都指 Para-1 测试网。   陆续更新中。
 I. 增加信任等级 目前等级 1、2、3 会被当作同样的信任等级来看待，因此如果你只是2或3级，无需去再去提升等级。但如果你的等级为4或5，则可以参考以下建议来操作。与此同时，我们鼓励加入我们的 Telegram 或 Discord 群来讨论与分享你的经验。
遇到提示 CONFIGURATION_NEEDED 或 CONFIGURATION_AND_SW_HARDENING_NEEDED  The EPID signature of the ISV enclave QUOTE has been verified correctly, but additional configuration of SGX platform may be needed (for further details see Advisory IDs). The platform has not been identified as compromised and thus it is not revoked.</description>
    </item>
    
  </channel>
</rss>
